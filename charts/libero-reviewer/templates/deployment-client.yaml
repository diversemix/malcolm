apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "libero-reviewer.fullname" . }}-client
  labels:
    app.kubernetes.io/name: {{ include "libero-reviewer.fullname" . }}-client
    helm.sh/chart: {{ include "libero-reviewer.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: client
spec:
  replicas: {{ .Values.client.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "libero-reviewer.fullname" . }}-client
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "libero-reviewer.fullname" . }}-client
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: client
    spec:
      containers:
        - name: {{ .Chart.Name }}-client
          image: "{{ .Values.client.image.repository }}:{{ .Values.client.image.tag }}"
          imagePullPolicy: {{ .Values.client.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.newRelic.browserScriptConfigmap}}
# inject the script tag for newrelic into index.html
# done this way to have per deployment newrelic, but use same container image
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - >
                    "sed 's/<\/head>/\n<\/head>/' /dist/index.html
                    | sed '/>$/ r /tmp/newrelic.script'
                    | tr -d '\n'
                    > tmp
                    && mv tmp /dist/index.html"
          volumeMounts:
          - name: newrelic-script
            mountPath: /tmp
            readOnly: true
      volumes:
      - name: newrelic-script
        configMap:
          name: {{ .Values.newRelic.browserScriptConfigmap }}
{{- end }}
