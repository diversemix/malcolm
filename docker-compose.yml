version: '3'
services:
  postgres:
    image: postgres:11
    ports:
      - "5432:${DB_PORT}"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    networks:
      - infra_postgres
    volumes:
      - pg-data:/var/lib/postgresql/data

  server:
    image: node:10
    ports:
      - "3000:${SERVER_PORT}"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      DB_TYPE: ${DB_TYPE}
      DB_HOST: "postgres"
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
    working_dir: "/server"
    command: ["bash", "-c", "yarn && yarn run start:dev"]
    volumes:
      - ./server/:/server/:z
    networks:
      - infra_postgres
      - infra_api
    depends_on: ["postgres"]

  continuum-auth:
    image: node:10
    ports:
      - "3001:3001"
    working_dir: "/continuum-auth"
    command: ["bash", "-c", "yarn && yarn start:dev | yarn run pino-pretty"]
    volumes:
      - ./continuum-auth/:/continuum-auth/:z
    networks:
      - infra_api

  client:
    image: node:10
    ports:
      - "9000:${CLIENT_PORT}"
    working_dir: "/client"
    command: ["bash", "-c", "yarn && yarn run start --host 0.0.0.0"]
    volumes:
      - ./client/:/client/:z
    environment:
      CLIENT_PORT: ${CLIENT_PORT}
      CLIENT_API_URL: ${CLIENT_API_URL}
      CLIENT_API_PROXY_URL: "http://server"
      CLIENT_API_PROXY_ENDPOINT: ${CLIENT_API_PROXY_ENDPOINT}
      SERVER_PORT: ${SERVER_PORT}
    networks:
      - infra_api
    depends_on: ["server"]

networks:
  infra_postgres:
  infra_api:

volumes:
  pg-data:
